{"version":3,"sources":["Components/profile/Profile.module.css","Components/statistics/Statistics.module.css","Components/friendsList/friendsListItem/FriendsListItem.module.css","Components/friendsList/FriendsList.module.css","Components/transactions/TransactionHistory.module.css","data/index.js","Components/friendsList/friendsListItem/FriendsListItem.js","Components/friendsList/FriendList.js","Components/profile/statList/StatList.js","Components/profile/Profile.js","Components/statistics/RandomColor.js","Components/statistics/statisticsListItem/StatisticsListItem.js","Components/statistics/Statistics.js","Components/transactions/TransactionHistory.js","Components/App.js","index.js"],"names":["module","exports","data","user","stats","friends","transactions","FriendsListItem","avatar","name","isOnline","id","className","styles","item","isOffline","src","alt","width","FriendList","friendList","map","friend","StatList","description","label","Object","keys","quantity","values","Profile","tag","location","profile","key","index","randomColor","r","Math","round","random","g","b","StatisticsListItem","percentage","stat","style","backgroundColor","Statistics","title","statistics","list","TransactionHistory","items","transactionHistory","type","amount","currency","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81f65036.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1BPBU\",\"avatar\":\"Profile_avatar__EkmPf\",\"name\":\"Profile_name__1x6nN\",\"tag\":\"Profile_tag__2Jlq2\",\"location\":\"Profile_location__22L0G\",\"stats\":\"Profile_stats__gEGoI\",\"description\":\"Profile_description__PKBkR\",\"label\":\"Profile_label__2o_3F\",\"quantity\":\"Profile_quantity__1tjEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__BfJDr\",\"title\":\"Statistics_title__3ix2_\",\"list\":\"Statistics_list__3Lk20\",\"stat\":\"Statistics_stat__1OK06\",\"percentage\":\"Statistics_percentage__3q056\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsListItem_item__33Ada\",\"avatar\":\"FriendsListItem_avatar__25TR1\",\"isOnline\":\"FriendsListItem_isOnline__kfO-O\",\"isOffline\":\"FriendsListItem_isOffline__1L98E\",\"name\":\"FriendsListItem_name__6vwm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__1uIMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__94KSK\"};","import user from \"./user.json\";\r\nimport stats from \"./statistical-data.json\";\r\nimport friends from \"./friends.json\";\r\nimport transactions from \"./transactions.json\";\r\n\r\nconst data = {\r\n  user,\r\n  stats,\r\n  friends,\r\n  transactions,\r\n};\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FriendsListItem.module.css\";\r\n\r\nconst FriendsListItem = ({ avatar, name, isOnline, id }) => {\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width={50} />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default FriendsListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendsListItem from \"./friendsListItem/FriendsListItem\";\r\nimport styles from \"./FriendsList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map((friend) => {\r\n        return <FriendsListItem key={friend.id} {...friend} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = PropTypes.arrayOf(PropTypes.object).isRequired;\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../profile/Profile.module.css\";\r\n\r\nconst StatList = ({ item }) => {\r\n  return (\r\n    <li className={styles.description}>\r\n      <span className={styles.label}>{Object.keys(item)[0]}:</span>\r\n      <span className={styles.quantity}>{Object.values(item)[0]}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatList.propTypes = {\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default StatList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatList from \"./statList/StatList\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={tag} className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        {Object.keys(stats)\r\n          .map((key) => ({ [key]: stats[key] }))\r\n          .map((item, index) => (\r\n            <StatList key={index} item={item} />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};\r\nexport default Profile;\r\n","const randomColor = () => {\r\n      let r = Math.round(Math.random() * 255);\r\n      let g = Math.round(Math.random() * 255);\r\n      let b = Math.round(Math.random() * 255);\r\n      return `rgb(${r}, ${g}, ${b})`;\r\n}\r\n\r\nexport default randomColor;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../Statistics.module.css\";\r\nimport randomColor from \"../RandomColor\";\r\n\r\nconst StatisticsListItem = ({ label, percentage }) => {\r\n  return (\r\n    <li className={styles.stat} style={{ backgroundColor: randomColor() }}>\r\n      <span className={styles.label}>{label}</span>\r\n      <span className={styles.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticsListItem.propTypes = PropTypes.shape({\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n}).isRequired;\r\n\r\nexport default StatisticsListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsListItem from \"./statisticsListItem/StatisticsListItem.js\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n\r\n      <ul className={styles.list}>\r\n        {stats.map((stat) => {\r\n          return <StatisticsListItem key={stat.id} {...stat} />;\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })\r\n).isRequired;\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead className=\"transaction-label\">\r\n        <tr className=\"transaction-titles\">\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"transaction-body\">\r\n        {items.map(({ id, type, amount, currency }) => {\r\n          return (\r\n            <tr key={id}>\r\n              <td>{type}</td>\r\n              <td>{amount}</td>\r\n              <td>{currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = PropTypes.arrayOf(\r\n  PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  })\r\n).isRequired;\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport data from \"../data/index.js\";\r\nimport FriendList from \"./friendsList/FriendList\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport TransactionHistory from \"./transactions/TransactionHistory.js\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile {...data.user} />\r\n      <Statistics title=\"UPLOAD STATS\" stats={data.stats} />\r\n      <FriendList friends={data.friends} />\r\n      <TransactionHistory items={data.transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}